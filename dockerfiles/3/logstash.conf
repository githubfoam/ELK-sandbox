input{

	file{
		path => "/xsweet/xsweet/victims/victim-*"
		start_position => "beginning"
		sincedb_path => "/dev/null"
        	ignore_older => 0
	}	

	file{
		path => "/xsweet/xsweet/victims/attempts.txt"
		start_position => "beginning"
		sincedb_path => "/dev/null"
		ignore_older => 0
	}

	file {
		path => "/xsweet/xsweet/xsweet.log"
		start_position => "beginning"
		sincedb_path => "/dev/null"
		ignore_older => 0
	}

}

filter{	
	
	if [path] =~ "attempts"{
		grok{
			match => {"message" => "%{TIMESTAMP_ISO8601:time}\s+%{GREEDYDATA:username}\:%{GREEDYDATA:password}"}
		}
		date { 
			match => ["time", "yyyy-MM-dd HH:mm:ss.SSSSSSZZ"]
		}
	}
	else if [path] =~ "victim-*"{
		grok{
			match => {"message" => "%{GREEDYDATA:commands}"}
		}

	}
	
	else {
		grok{
			match => {"message" => "\[SSHService\s+ssh-userauth\s+on\s+SSHServerTransport\,%{WORD:channel}\,%{IP:clientip}\]\s+%{WORD:user}\s+trying\s+auth\s+password"}
		}

		if "_grokparsefailure" in [tags] {
 			drop { }
		}	
		
		geoip {
			source => "clientip"
			target => "geoip"
			database => "/xsweet/logstash/GeoLite2-City.mmdb"
			add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
			add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}" ]
		}
		mutate {
			convert => [ "[geoip][coordinates]", "float"]
		}
	}
		
}

output {

stdout { codec => rubydebug }


elasticsearch {
hosts => "localhost:9200"
index => "logstash-xsweet"
}

}

